---
layout: security_patch
cve: CVE-2010-0401
first_version: 0.7.0
last_version: 1.0.0
---

Index: src/network/core/tcp_game.h
===================================================================
--- src/network/core/tcp_game.h	(revision 19678)
+++ src/network/core/tcp_game.h	(working copy)
@@ -67,13 +67,15 @@
 /** Status of a client */
 enum ClientStatus {
 	STATUS_INACTIVE,   ///< The client is not connected nor active
-	STATUS_AUTHORIZING,///< The client is authorizing
+	STATUS_AUTH_GAME,  ///< The client is authorizing with game (server) password
+	STATUS_AUTH_COMPANY, ///< The client is authorizing with company password
 	STATUS_AUTH,       ///< The client is authorized
 	STATUS_MAP_WAIT,   ///< The client is waiting as someone else is downloading the map
 	STATUS_MAP,        ///< The client is downloading the map
 	STATUS_DONE_MAP,   ///< The client has downloaded the map
 	STATUS_PRE_ACTIVE, ///< The client is catching up the delayed frames
 	STATUS_ACTIVE,     ///< The client is active within in the game
+	STATUS_END         ///< Must ALWAYS be on the end of this list!! (period)
 };


Index: src/network/network_server.cpp
===================================================================
--- src/network/network_server.cpp	(revision 19678)
+++ src/network/network_server.cpp	(working copy)
@@ -215,7 +215,7 @@
 	/* Invalid packet when status is AUTH or higher */
 	if (cs->status >= STATUS_AUTH) return;

-	cs->status = STATUS_AUTHORIZING;
+	cs->status = type == NETWORK_GAME_PASSWORD ? STATUS_AUTH_GAME : STATUS_AUTH_COMPANY;

 	Packet *p = NetworkSend_Init(PACKET_SERVER_NEED_PASSWORD);
 	p->Send_uint8(type);
@@ -727,7 +727,7 @@
 	type = (NetworkPasswordType)p->Recv_uint8();
 	p->Recv_string(password, sizeof(password));

-	if (cs->status == STATUS_AUTHORIZING && type == NETWORK_GAME_PASSWORD) {
+	if (cs->status == STATUS_AUTH_GAME && type == NETWORK_GAME_PASSWORD) {
 		/* Check game-password */
 		if (strcmp(password, _settings_client.network.server_password) != 0) {
 			/* Password is invalid */
@@ -745,7 +745,7 @@
 		/* Valid password, allow user */
 		SEND_COMMAND(PACKET_SERVER_WELCOME)(cs);
 		return;
-	} else if (cs->status == STATUS_AUTHORIZING && type == NETWORK_COMPANY_PASSWORD) {
+	} else if (cs->status == STATUS_AUTH_COMPANY && type == NETWORK_COMPANY_PASSWORD) {
 		ci = cs->GetInfo();

 		if (strcmp(password, _network_company_states[ci->client_playas].password) != 0) {
@@ -1694,7 +1694,8 @@
 {
 	static const char * const stat_str[] = {
 		"inactive",
-		"authorizing",
+		"authorizing (server password)",
+		"authorizing (company password)",
 		"authorized",
 		"waiting",
 		"loading map",
@@ -1702,6 +1703,7 @@
 		"ready",
 		"active"
 	};
+	assert_compile(lengthof(stat_str) == STATUS_END);

 	NetworkClientSocket *cs;
 	FOR_ALL_CLIENT_SOCKETS(cs) {
