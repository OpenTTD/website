---
layout: security_patch
cve: CVE-2010-0401
first_version: 0.5.1
last_version: 0.5.3
---

Index: network_data.h
===================================================================
--- network_data.h	(revision 19680)
+++ network_data.h	(working copy)
@@ -49,13 +49,15 @@

 typedef enum {
 	STATUS_INACTIVE,
-	STATUS_AUTHORIZING, // This means that the client is authorizing
+	STATUS_AUTH_GAME,    ///< The client is authorizing with game (server) password
+	STATUS_AUTH_COMPANY, ///< The client is authorizing with company password
 	STATUS_AUTH, // This means that the client is authorized
 	STATUS_MAP_WAIT, // This means that the client is put on hold because someone else is getting the map
 	STATUS_MAP,
 	STATUS_DONE_MAP,
 	STATUS_PRE_ACTIVE,
 	STATUS_ACTIVE,
+	STATUS_END         ///< Must ALWAYS be on the end of this list!! (period)
 } ClientStatus;

 typedef enum {
Index: console_cmds.c
===================================================================
--- console_cmds.c	(revision 19680)
+++ console_cmds.c	(working copy)
@@ -529,7 +529,8 @@
 {
 	static const char* const stat_str[] = {
 		"inactive",
-		"authorizing",
+		"authorizing (server password)",
+		"authorizing (company password)",
 		"authorized",
 		"waiting",
 		"loading map",
Index: network_server.c
===================================================================
--- network_server.c	(revision 19680)
+++ network_server.c	(working copy)
@@ -220,7 +220,7 @@
 	/* Invalid packet when status is AUTH or higher */
 	if (cs->status >= STATUS_AUTH) return;

-	cs->status = STATUS_AUTHORIZING;
+	cs->status = type == NETWORK_GAME_PASSWORD ? STATUS_AUTH_GAME : STATUS_AUTH_COMPANY;

 	p = NetworkSend_Init(PACKET_SERVER_NEED_PASSWORD);
 	NetworkSend_uint8(p, type);
@@ -701,7 +701,7 @@
 	type = NetworkRecv_uint8(cs, p);
 	NetworkRecv_string(cs, p, password, sizeof(password));

-	if (cs->status == STATUS_AUTHORIZING && type == NETWORK_GAME_PASSWORD) {
+	if (cs->status == STATUS_AUTH_GAME && type == NETWORK_GAME_PASSWORD) {
 		// Check game-password
 		if (strcmp(password, _network_game_info.server_password) != 0) {
 			// Password is invalid
@@ -719,7 +719,7 @@
 		// Valid password, allow user
 		SEND_COMMAND(PACKET_SERVER_WELCOME)(cs);
 		return;
-	} else if (cs->status == STATUS_AUTHORIZING && type == NETWORK_COMPANY_PASSWORD) {
+	} else if (cs->status == STATUS_AUTH_COMPANY && type == NETWORK_COMPANY_PASSWORD) {
 		ci = DEREF_CLIENT_INFO(cs);

 		if (strcmp(password, _network_player_info[ci->client_playas].password) != 0) {
